name: Elastix

on: [push, pull_request]

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix

    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 3
      matrix:
        os: [ubuntu-18.04, windows-2019, macos-10.15]
        include:
          - os: ubuntu-18.04
            c-compiler: "gcc"
            cxx-compiler: "g++"
            itk-git-tag: "v5.1.2"
            elastix-git-tag: "5.0.1"
            cmake-build-type: "Release"
            ANNLib: "libANNlib-5.0.so"
            ANNLib2: "libANNlib-5.0.so.1"
          - os: windows-2019
            c-compiler: "cl.exe"
            cxx-compiler: "cl.exe"
            itk-git-tag: "v5.1.2"
            elastix-git-tag: "5.0.1"
            cmake-build-type: "Release"
            ANNLib: "ANNlib-5.0.dll"
          - os: macos-10.15
            c-compiler: "clang"
            cxx-compiler: "clang++"
            itk-git-tag: "v5.1.2"
            elastix-git-tag: "5.0.1"
            cmake-build-type: "Release"
            ANNLib: "libANNlib-5.0.1.dylib"
            ANNLib2: "libANNlib-5.0.dylib"

    steps:
    - uses: actions/checkout@v2

    - uses: actions/cache@v2
      id: cache_itk
      with:
        path: |
          ITK-build
          ITK-source
        key: ${{ matrix.itk-git-tag }}-${{ matrix.os }}-${{ matrix.cmake-build-type }}

    - uses: actions/cache@v2
      id: cache_elastix
      with:
        path: |
          Elastix-build
          Elastix-source
        key: ${{ matrix.elastix-git-tag }}-${{ matrix.os }}-${{ matrix.cmake-build-type }}

    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install ninja

    - name: Get specific version of CMake, Ninja
      uses: lukka/get-cmake@v3.18.3


    - name: Download ITK
      if: steps.cache_itk.outputs.cache-hit != 'true'
      run: |
        git clone https://github.com/InsightSoftwareConsortium/ITK.git --branch ${{ matrix.itk-git-tag }} --depth 1 ITK-source

    - name: Build ITK
      if: steps.cache_itk.outputs.cache-hit != 'true' && matrix.os != 'windows-2019'
      run: |
        mkdir ITK-build
        cd ITK-build
        cmake -DBUILD_EXAMPLES=OFF -DBUILD_TESTING=OFF -DCMAKE_BUILD_TYPE=${{ matrix.cmake-build-type }} -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=ON -DCMAKE_VISIBILITY_INLINES_HIDDEN:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=OFF -DCMAKE_SKIP_RPATH:BOOL=ON -DITK_LEGACY_REMOVE:BOOL=ON -DITK_USE_KWSTYLE:BOOL=OFF -DITK_BUILD_DEFAULT_MODULES:BOOL=ON -DModule_ITKReview:BOOL=ON -GNinja ../ITK-source
        ninja

    - name: Build ITK
      if: steps.cache_itk.outputs.cache-hit != 'true' && matrix.os == 'windows-2019'
      run: |
        mkdir ITK-build
        cd ITK-build
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        cmake -DBUILD_EXAMPLES=OFF -DBUILD_TESTING=OFF -DCMAKE_BUILD_TYPE=${{ matrix.cmake-build-type }} -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=ON -DCMAKE_VISIBILITY_INLINES_HIDDEN:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=OFF -DCMAKE_SKIP_RPATH:BOOL=ON -DITK_LEGACY_REMOVE:BOOL=ON -DITK_USE_KWSTYLE:BOOL=OFF -DITK_BUILD_DEFAULT_MODULES:BOOL=ON -DModule_ITKReview:BOOL=ON -GNinja ../ITK-source
        ninja
      shell: cmd

    - name: Download Elastix
      if: steps.cache_elastix.outputs.cache-hit != 'true'
      run: |
        git clone https://github.com/SuperElastix/elastix.git --branch ${{ matrix.elastix-git-tag }} --depth 1 Elastix-source


    - name: Build Elastix Unix
      if: steps.cache_elastix.outputs.cache-hit != 'true' && matrix.os != 'windows-2019'
      run: |
        mkdir Elastix-build
        cd Elastix-build
        cmake -DBUILD_TESTING:BOOL=OFF -DELASTIX_BUILD_EXECUTABLE:BOOL=OFF -DITK_DIR=../ITK-build -DCMAKE_BUILD_TYPE=${{ matrix.cmake-build-type }} -GNinja ../Elastix-source
        ninja

    - name: Build Elastix Unix
      if: steps.cache_elastix.outputs.cache-hit != 'true' && matrix.os == 'windows-2019'
      run: |
        mkdir Elastix-build
        cd Elastix-build
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        cmake -DBUILD_TESTING:BOOL=OFF -DELASTIX_BUILD_EXECUTABLE:BOOL=OFF -DITK_DIR=../ITK-build -DCMAKE_BUILD_TYPE=${{ matrix.cmake-build-type }} -GNinja ../Elastix-source
        ninja
      shell: cmd

    - name: Build SimpleElastix Unix
      if: matrix.os != 'windows-2019'
      run: |
        mkdir SimpleElastix-build
        cd SimpleElastix-build
        cmake -DWRAP_LUA:BOOL=OFF -DWRAP_PYTHON:BOOL=ON -DWRAP_JAVA:BOOL=OFF -DWRAP_CSHARP:BOOL=OFF -DWRAP_TCL:BOOL=OFF -DWRAP_R:BOOL=OFF -DWRAP_RUBY:BOOL=OFF -DBUILD_EXAMPLES:BOOL=ON -DBUILD_TESTING:BOOL=OFF -DCMAKE_CXX_FLAGS=-w -DCMAKE_C_FLAGS=-w -DCMAKE_BUILD_TYPE=${{ matrix.cmake-build-type }} -DSimpleITK_USE_SYSTEM_ITK:BOOL=ON -DITK_DIR=../ITK-build -DSimpleITK_USE_SYSTEM_ELASTIX:BOOL=ON -DElastix_DIR=../Elastix-build -DSimpleITK_4D_IMAGES:BOOL=OFF ../SuperBuild
        make -j4
        make -C SimpleITK-build dist

    - name: Build SimpleElastix Unix
      if: matrix.os == 'windows-2019'
      run: |
        mkdir SimpleElastix-build
        cd SimpleElastix-build
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        cmake -DWRAP_LUA:BOOL=OFF -DWRAP_PYTHON:BOOL=ON -DWRAP_JAVA:BOOL=OFF -DWRAP_CSHARP:BOOL=OFF -DWRAP_TCL:BOOL=OFF -DWRAP_R:BOOL=OFF -DWRAP_RUBY:BOOL=OFF -DBUILD_EXAMPLES:BOOL=ON -DBUILD_TESTING:BOOL=OFF -DCMAKE_CXX_FLAGS=-w -DCMAKE_C_FLAGS=-w -DCMAKE_BUILD_TYPE=${{ matrix.cmake-build-type }} -DSimpleITK_USE_SYSTEM_ITK:BOOL=ON -DITK_DIR=../ITK-build -DSimpleITK_USE_SYSTEM_ELASTIX:BOOL=ON -DElastix_DIR=../Elastix-build -DSimpleITK_4D_IMAGES:BOOL=OFF -GNinja ../SuperBuild
        ninja

    - name: Prepare Artifacts Unix
      if: matrix.os != 'windows-2019'
      shell: bash
      run: |
        mkdir uploads
        mv SimpleElastix-build/SimpleITK-build/Wrapping/Python/dist/*.whl uploads

    - name: Prepare Artifacts Windows
      if: matrix.os == 'windows-2019'
      shell: bash
      run: |
        mkdir uploads
        mv SimpleElastix-build/SimpleITK-build/Wrapping/Python uploads

    - name: Publish Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: "${{ matrix.os }}"
        path: uploads
